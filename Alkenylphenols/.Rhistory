stage_plant_plot
stage_plant_plot<-ggplot(a11, aes(x=stage, y=per_dry_wt)) +
geom_boxplot() + geom_point(aes(color=plant))+
labs(x=" ", y="Total alkenylphenols (% dry wt)")+
scale_x_discrete(limits=c("6","5","4","3", "2","1"))+
theme_minimal()+
scale_color_viridis(discrete = T, option = "A", name = "Plant ID")
stage_plant_plot
stage_plant_plot<-ggplot(a11, aes(y=per_dry_wt)) +
geom_boxplot() + geom_point(aes(color=plant))+
labs(x=" ", y="Total alkenylphenols (% dry wt)")+
scale_x_discrete(limits=c("6","5","4","3", "2","1"))+
theme_minimal()+
scale_color_viridis(discrete = T, option = "A", name = "Plant ID")
stage_plant_plot
ggplot(a11, aes(x=var,y=per_dry_wt)) +
geom_boxplot() + geom_point(aes(color=plant))
stage_plant_plot<-ggplot(a11, aes(x=1,y=per_dry_wt)) +
geom_boxplot() + geom_point(aes(color=plant))+
labs(x=" ", y="Total alkenylphenols (% dry wt)")+
scale_x_discrete(limits=c("6","5","4","3", "2","1"))+
theme_minimal()+
scale_color_viridis(discrete = T, option = "A", name = "Plant ID")
stage_plant_plot
plant_plot<-ggplot(a11, aes(x=1,y=per_dry_wt)) +
geom_boxplot() + geom_point(aes(color=plant))+
labs(x=" ", y="Total alkenylphenols (% dry wt)")+
scale_x_discrete(limits=c("6","5","4","3", "2","1"))+
theme_minimal()+
scale_color_viridis(discrete = T, option = "A", name = "Plant ID")
plant_plot
ggplot(a11, aes(x=1,y=per_dry_wt)) +
geom_boxplot() + geom_point(aes(color=plant))+
labs(x=" ", y="Total alkenylphenols (% dry wt)")+
scale_x_discrete(limits=c("6","5","4","3", "2","1"))+
theme_minimal()+
scale_color_viridis(discrete = T, option = "A", name = "Plant ID")
plant_plot<-ggplot(a11, aes(x=1,y=per_dry_wt)) +
geom_boxplot() + geom_point(aes(color=plant))+
labs(x=" ", y="Total alkenylphenols (% dry wt)")+
scale_x_discrete(limits=c("6","5","4","3", "2","1"))+
theme_minimal()+
scale_color_viridis(discrete = T, option = "A", name = "Plant ID")
plant_plot
plant_plot<-ggplot(a11, aes(x=1,y=per_dry_wt)) +
geom_boxplot() + geom_point(aes(color=plant))+
labs(x=" ", y="Total alkenylphenols (% dry wt)")+
theme_minimal()+
scale_color_viridis(discrete = T, option = "A", name = "Plant ID")
a11<-aggregate(per_dry_wt~plant+stage,data=dat,FUN=sum)
stage_plant_plot<-ggplot(a11, aes(x=stage,y=per_dry_wt)) +
geom_boxplot() + geom_point(aes(color=plant))+
labs(x=" ", y="Total alkenylphenols (% dry wt)")+
scale_x_discrete(limits=c("6","5","4","3", "2","1"))+
theme_minimal()+
scale_color_viridis(discrete = T, option = "A", name = "Plant ID")
stage_plant_plot
plant_plot<-ggplot(a11, aes(x=1,y=per_dry_wt)) +
geom_boxplot() + geom_point(aes(color=plant))+
labs(x=" ", y="Total alkenylphenols (% dry wt)")+
theme_minimal()+
scale_color_viridis(discrete = T, option = "A", name = "Plant ID")
plant_plot
plant_plot<-ggplot(a11, aes(x=1,y=per_dry_wt)) +
geom_boxplot() + geom_point(aes(color=plant))+
labs(x=" ", y="Total alkenylphenols (% dry wt)")+
theme_minimal()+
scale_color_viridis(discrete = T, option = "A", name = "Plant ID")+
theme(axis.text.x=element_blank())
plant_plot
plant_plot<-ggplot(a11, aes(x=1,y=per_dry_wt)) +
geom_boxplot() + geom_point(aes(color=plant))+
labs(x=" ", y="Total alkenylphenols (% dry wt)")+
theme_minimal()+
scale_color_viridis(discrete = T, option = "A", name = "Plant ID")+
theme(axis.text.x=element_blank())+
scale_x_discrete(limits=c(".99","1","1.1"))
plant_plot<-ggplot(a11, aes(x=1,y=per_dry_wt)) +
geom_boxplot() + geom_point(aes(color=plant))+
labs(x=" ", y="Total alkenylphenols (% dry wt)")+
theme_minimal()+
scale_color_viridis(discrete = T, option = "A", name = "Plant ID")+
theme(axis.text.x=element_blank())+
scale_x_discrete(limits=c(".99","1","1.1"))
plant_plot
plant_plot<-ggplot(a11, aes(x=1,y=per_dry_wt)) +
geom_boxplot() + geom_point(aes(color=plant))+
labs(x=" ", y="Total alkenylphenols (% dry wt)")+
theme_minimal()+
scale_color_viridis(discrete = T, option = "B", name = "Plant ID")+
theme(axis.text.x=element_blank())+
scale_x_discrete(limits=c(".99","1","1.1"))
plant_plot
plant_plot<-ggplot(a11, aes(x=1,y=per_dry_wt)) +
geom_boxplot() + geom_point(aes(color=plant))+
labs(x=" ", y="Total alkenylphenols (% dry wt)")+
theme_minimal()+
scale_color_viridis(discrete = T, option = "C", name = "Plant ID")+
theme(axis.text.x=element_blank())+
scale_x_discrete(limits=c(".99","1","1.1"))
plant_plot
plant_plot<-ggplot(a11, aes(x=1,y=per_dry_wt)) +
geom_boxplot() + geom_point(aes(color=plant))+
labs(x=" ", y="Total alkenylphenols (% dry wt)")+
theme_minimal()+
scale_color_viridis(discrete = T, option = "D", name = "Plant ID")+
theme(axis.text.x=element_blank())+
scale_x_discrete(limits=c(".99","1","1.1"))
plant_plot
tiff('stage_plant_plot.tiff', units="in", width=6, height=5, res=500)
stage_plant_plot
dev.off()
tiff('plant_plot.tiff', units="in", width=6, height=5, res=500)
plant_plot
dev.off()
setwd("~/Desktop/DATA/Alkenylphenols all")
library(dplyr)
library(tidyr)
library(Rmisc)
library(reshape)
library(multcomp)
library(MASS)
library(RColorBrewer)
library(ggplot2)
library(lsmeans)
library(multcompView)
library(emmeans)
library(lme4)
library(AICcmodavg)
library(betareg)
library(car)
library(viridis)
df_all <- read.csv(file="df_all.csv",head=TRUE)
#removing unnec. cols
df_all <- subset(df_all, select = -c(1, 6:32,43:52))
df_all[df_all == "#VALUE!"] <- NA
df_all$A_pdw<-as.numeric(as.character(df_all$A_pdw))
df_all$B_pdw<-as.numeric(as.character(df_all$B_pdw))
df_all$C_pdw<-as.numeric(as.character(df_all$C_pdw))
df_all$D_pdw<-as.numeric(as.character(df_all$D_pdw))
df_all$E_pdw<-as.numeric(as.character(df_all$E_pdw))
df_all$F_pdw<-as.numeric(as.character(df_all$F_pdw))
df_all$G_pdw<-as.numeric(as.character(df_all$G_pdw))
df_all$H_pdw<-as.numeric(as.character(df_all$H_pdw))
df_all$I_pdw<-as.numeric(as.character(df_all$I_pdw))
df_all$J_pdw<-as.numeric(as.character(df_all$J_pdw))
df_all$tissue<-as.factor(df_all$tissue)
df_all$plant<-as.factor(df_all$plant)
df_all$stage<-as.factor(df_all$stage)
#gather rows into columns, more data cleaning
datall <- gather(df_all, "compound", "per_dry_wt", 5:14)
datall$per_dry_wt<-as.numeric(datall$per_dry_wt)
datall$compound<-as.character(datall$compound)
datall$stage<-as.character(datall$stage)
#dry weight proportions without adding constant
datall$props<-(datall$per_dry_wt/100)
#proportion with constant
datall$prop_dry_wt<-(datall$per_dry_wt/100)+.1
##splitting between tissue types
##only leaves
dfl <- filter(datall, tissue == "L")
##only seeds
dfs <- filter(datall, tissue == "S")
##only pulp
dat <- filter(datall, tissue == "P")
#plot with tissues
datall <- datall[order(datall$tissue),]
datall <- datall[order(datall$stage),]
datall$tissue<-as.character(datall$tissue)
datall$tissue[691:1210]<-"F"
datall$tissue[1:210]<-"R"
#datall$tissue[1261:1300]<-"ML"
#removing unripe seeds
datall<-datall[-c(441:460, 671:690),]
datall$tissue[datall$tissue=="R"]="Ripe pulp"
datall$tissue[datall$tissue=="P"]="Unripe pulp"
datall$tissue[datall$tissue=="F"]="Flowers"
datall$tissue[datall$tissue=="S"]="Seeds"
datall$tissue[datall$tissue=="L"]="Leaves"
#have to run with constant added. numbers too small?
beta1<-betareg(prop_dry_wt~tissue+compound, data=datall)
beta2<-betareg(prop_dry_wt~tissue*compound, data=datall)
beta3<-betareg(prop_dry_wt~tissue, data=datall)
beta4<-betareg(prop_dry_wt~compound, data=datall)
beta5<-betareg(prop_dry_wt~1, data=datall)#"optimization failed to converge for null model"
AIC(beta1,beta2,beta3,beta4,beta5)
aictab(cand.set=list(beta1,beta2,beta3,beta4,beta5),
modnames=c("t+c","t*c","t","c","null"))#AIC table
install.packages("kableExtra")
library(knitr)
library(kableExtra)
kable(aictab(cand.set=list(beta11,beta13,beta14,beta15),
modnames=c("+","s","p","null")))#AIC table
kable(CLD(d11$emmeans,  Letters ='ABCDEFGHIJKLMNOPQRS'))
kable(t1,"latex")
t1<-CLD(d11$emmeans,  Letters ='ABCDEFGHIJKLMNOPQRS')
kable(t1,"latex")
kable(t1)
kable(t1,"latex")
t1<-CLD(d11$emmeans,  Letters ='ABCDEFGHIJKLMNOPQRS')
t1
%>%
%>%select(plant, emmean, SE, group) %>%
t1%>%select(plant, emmean, SE, group) %>%
kable("latex", escape = F, booktabs = T, linesep = "")
t1 %>%
select(plant, emmean, SE, group) %>%
kable("latex", escape = F, booktabs = T, linesep = "")
View(t1)
t1 %>%
select(plant, emmean, SE, group) %>%
kable("latex", escape = F, booktabs = T, linesep = "")
tab<-t1 %>%
select(plant, emmean, SE, group) %>%
kable("latex", escape = F, booktabs = T, linesep = "")
?select
select(t1, plant, emmean, SE, group) %>%
kable("latex", escape = F, booktabs = T, linesep = "")
tab<-t1 %>%
select(t1, plant, emmean, SE, group) %>%
kable("latex", escape = F, booktabs = T, linesep = "")
tab<-t1 %>%
select(plant, emmean, SE, group) %>%
kable("latex", escape = F, booktabs = T, linesep = "")
tab <- t1 %>%
select(plant, emmean, SE, group)
tab <- t1 %>%
select(plant, emmean, SE, .group) %>%
kable("latex", escape = F, booktabs = T, linesep = "")
tab <- t1 %>%
select("plant", "emmean", "SE", ".group") %>%
kable("latex", escape = F, booktabs = T, linesep = "")
t1$plant<-as.character(t1$plant)
tab <- t1 %>%
select("plant", "emmean", "SE", ".group") %>%
kable("latex", escape = F, booktabs = T, linesep = "")
t1$plant<-as.character(t1$plant)
tab <- t1 %>%
select(plant, emmean, SE, .group) %>%
kable("latex", escape = F, booktabs = T, linesep = "")
tab <- t1 %>%
select(t1, plant, emmean, SE, .group) %>%
kable("latex", escape = F, booktabs = T, linesep = "")
tab <- t1 %>%
select(.t1, plant, emmean, SE, .group) %>%
kable("latex", escape = F, booktabs = T, linesep = "")
select(t1, plant, emmean, SE, .group)
rm(list=ls())
# Load Libraries ----------------------------------------------------------
library(dplyr)
library(tidyr)
library(Rmisc)
library(reshape)
library(multcomp)
library(MASS)
library(RColorBrewer)
library(ggplot2)
library(multcompView)
library(emmeans)
library(lme4)
library(AICcmodavg)
library(betareg)
library(car)
library(viridis)
library(knitr)
library(kableExtra)
library(tinytex)
library(ggpubr)
library(pals)
# Natural history information (Objective 4)####
birb <- read.csv(file="Maynard_etal_Birds_Psf.csv",head=TRUE,fill=T)
setwd("~/Desktop/GitHub/LDM/Alkenylphenols")
birb <- read.csv(file="Maynard_etal_Birds_Psf.csv",head=TRUE,fill=T)
birb[is.na(birb)] <- 0
birb$gleaning<-as.numeric(as.character(birb$gleaning))
birb$frugivory<-as.numeric(as.character(birb$frugivory))
birb$cover.perch<-as.numeric(as.character(birb$cover.perch))
birb$defense<-as.numeric(as.character(birb$defense))
birb$calling<-as.numeric(as.character(birb$calling))
birb$socializing<-as.numeric(as.character(birb$socializing))
birb$parental.care<-as.numeric(as.character(birb$parental.care))
#birb$sp<-as.factor(birb$sp)
#summary table of bird activities
birb.sum<-aggregate(sp~gleaning+frugivory+cover.perch+defense+
calling+socializing+parental.care, data=birb, FUN=sum)
levels(bird$sp)
levels(birb$sp)
levels(birb$frugivory)
birb$gleaning<-as.character(birb$gleaning)
#summary table of bird activities
birb.sum<-aggregate(sp~gleaning, data=birb, FUN=sum)
birb$gleaning<-as.character(birb$gleaning)
levels(birb$gleaning)
#summary table of Passerini tanager activities
birb <- birb[order(birb$sp),]
PAST<-slice(datall, 22:42)
PAST<-slice(birb, 22:42)
View(PAST)
PAST<-slice(birb, 22:41)
past.sum<-aggregate(sp~gleaning+frugivory+cover.perch+defense+
calling+socializing+parental.care, data=PAST, FUN=sum)
past.sum<-aggregate(gleaning+frugivory+cover.perch+defense+
calling+socializing+parental.care, data=PAST, FUN=sum)
past.sum<-aggregate(date~gleaning+frugivory+cover.perch+defense+
calling+socializing+parental.care, data=PAST, FUN=sum)
past.sum<-aggregate(date~gleaning+frugivory+cover.perch+defense+
calling+socializing+parental.care, data=PAST, FUN=mean)
birb <- read.csv(file="Maynard_etal_Birds_Psf.csv",head=TRUE,fill=T)
birb[is.na(birb)] <- 0
birb$gleaning<-as.numeric(as.character(birb$gleaning))
birb$frugivory<-as.numeric(as.character(birb$frugivory))
birb$cover.perch<-as.numeric(as.character(birb$cover.perch))
birb$defense<-as.numeric(as.character(birb$defense))
birb$calling<-as.numeric(as.character(birb$calling))
birb$socializing<-as.numeric(as.character(birb$socializing))
birb$parental.care<-as.numeric(as.character(birb$parental.care))
#birb$sp<-as.factor(birb$sp)
#summary table of bird activities
#Warning, sum not meaningful for factors. Not sure why it isn't recognizing the commands above...
birb.sum<-aggregate(sp~gleaning+frugivory+cover.perch+defense+
calling+socializing+parental.care, data=birb, FUN=sum)
#summary table of bird activities
#Warning, sum not meaningful for factors. Not sure why it isn't recognizing the commands above...
birb.sum<-aggregate(sp~frugivory, data=birb, FUN=sum)
birb$gleaning<-as.numeric(as.character(birb$gleaning))
# Natural history information (Objective 4)####
birb <- read.csv(file="Maynard_etal_Birds_Psf.csv",head=TRUE,fill=T)
birb[is.na(birb)] <- 0
birb$gleaning<-as.numeric(as.character(birb$gleaning))
#summary table of bird activities
#Warning, sum not meaningful for factors. Not sure why it isn't recognizing the commands above...
birb.sum<-aggregate(sp~frugivory+cover.perch+defense+
calling+socializing+parental.care, data=birb, FUN=sum)
#summary table of bird activities
#Warning, sum not meaningful for factors. Not sure why it isn't recognizing the commands above...
birb.sum<-aggregate(sp~cover.perch+defense+
calling+socializing+parental.care, data=birb, FUN=sum)
birb$gleaning<-as.numeric(birb$gleaning)
as.numeric(levels(birb$gleaning))[birb$gleaning]
birb$gleaning<-as.numeric(as.character(birb$gleaning))
View(birb)
#summary table of bird activities
#Warning, sum not meaningful for factors. Not sure why it isn't recognizing the commands above...
birb.sum<-aggregate(sp~gleaning+frugivory+cover.perch+defense+
calling+socializing+parental.care, data=birb, FUN=sum)
birb$sp<-as.character(birb$sp)
#summary table of bird activities
#Warning, sum not meaningful for factors. Not sure why it isn't recognizing the commands above...
birb.sum<-aggregate(sp~gleaning+frugivory+cover.perch+defense+
calling+socializing+parental.care, data=birb, FUN=sum)
birb %>% group_by(sp) %>% summarise_each(gleaning(sum))
birb %>% group_by(sp) %>% summarise_each(funs(sum))
bir <- birb %>%
group_by(sp) %>%
summarise(gleaning=sum(gleaning), frugivory=sum(frugivory))
bir
View(bir)
birb <- read.csv(file="Maynard_etal_Birds_Psf.csv",head=TRUE,fill=T)
birb[is.na(birb)] <- 0
birb$gleaning<-as.numeric(as.character(birb$gleaning))
birb$frugivory<-as.numeric(as.character(birb$frugivory))
birb$cover.perch<-as.numeric(as.character(birb$cover.perch))
birb$defense<-as.numeric(as.character(birb$defense))
birb$calling<-as.numeric(as.character(birb$calling))
birb$socializing<-as.numeric(as.character(birb$socializing))
birb$parental.care<-as.numeric(as.character(birb$parental.care))
birb$sp<-as.character(birb$sp)
#summary table of bird activities
#Warning, sum not meaningful for factors. Not sure why it isn't recognizing the commands above...
birb.sum<-aggregate(sp~gleaning+frugivory+cover.perch+defense+
calling+socializing+parental.care, data=birb, FUN=sum)
head(birb.sum)
#this isn't summarizing by bird species...
library(dplyr)
bir <- birb %>%
group_by(sp) %>%
summarise(gleaning=sum(gleaning), frugivory=sum(frugivory))
bir
birb$sp<-as.factor(birb$sp)
#summary table of bird activities
#Warning, sum not meaningful for factors. Not sure why it isn't recognizing the commands above...
birb.sum<-aggregate(sp~gleaning+frugivory+cover.perch+defense+
calling+socializing+parental.care, data=birb, FUN=sum)
df_all <- read.csv(file="Maynard_etal_AlkenylphenolQuantChem_edit.csv",head=TRUE)
#removing columns unnec. for analysis
df_all <- subset(df_all, select = -c(1, 6:32))
df_all[df_all == "#VALUE!"] <- NA
df_all[df_all == "NA"] <- 0
##DATA CLEANING
df_all$A_pdw<-as.numeric(as.character(df_all$A_pdw))
df_all$B_pdw<-as.numeric(as.character(df_all$B_pdw))
df_all$C_pdw<-as.numeric(as.character(df_all$C_pdw))
df_all$D_pdw<-as.numeric(as.character(df_all$D_pdw))
df_all$E_pdw<-as.numeric(as.character(df_all$E_pdw))
df_all$F_pdw<-as.numeric(as.character(df_all$F_pdw))
df_all$G_pdw<-as.numeric(as.character(df_all$G_pdw))
df_all$H_pdw<-as.numeric(as.character(df_all$H_pdw))
df_all$I_pdw<-as.numeric(as.character(df_all$I_pdw))
df_all$J_pdw<-as.numeric(as.character(df_all$J_pdw))
df_all$tissue<-as.factor(df_all$tissue)
df_all$plant<-as.factor(df_all$plant)
df_all$stage<-as.factor(df_all$stage)
#gather rows into columns, more data cleaning
datall <- gather(df_all, "compound", "per_dry_wt", 5:14)
datall$per_dry_wt<-as.numeric(datall$per_dry_wt)
datall$compound<-as.character(datall$compound)
datall$stage<-as.character(datall$stage)
#dry weight % -> proportions
datall$props<-(datall$per_dry_wt/100)
##splitting between tissue types
##only leaves
dfl <- filter(datall, tissue == "L")
##only pulp
dat <- filter(datall, tissue == "P")
#labeling
datall <- datall[order(datall$tissue),]
datall <- datall[order(datall$stage),]
datall$tissue<-as.character(datall$tissue)
datall$plant<-as.character(datall$plant)
#sep stages within tissues
datall$tissue[1:200]<-"R"
datall$tissue[261:470]<-"U2"
datall$tissue[471:660]<-"U3"
datall$tissue[661:870]<-"F4"
datall$tissue[871:1020]<-"F5"
datall$tissue[1021:1130]<-"F6"
datall$tissue[datall$tissue=="R"]="Ripe pulp (1)"
datall$tissue[datall$tissue=="U2"]="Unripe pulp (2)"
datall$tissue[datall$tissue=="U3"]="Unripe pulp (3)"
datall$tissue[datall$tissue=="F4"]="Flowers (4)"
datall$tissue[datall$tissue=="F5"]="Flowers (5)"
datall$tissue[datall$tissue=="F6"]="Dev. flowers (6)"
datall$tissue[datall$tissue=="S"]="Seeds"
datall$tissue[datall$stage=="M"]="Mature leaves"
datall$compound[datall$compound=="A_pdw"]="A"
datall$compound[datall$compound=="B_pdw"]="B"
datall$compound[datall$compound=="C_pdw"]="C"
datall$compound[datall$compound=="D_pdw"]="D"
datall$compound[datall$compound=="E_pdw"]="E"
datall$compound[datall$compound=="F_pdw"]="F"
datall$compound[datall$compound=="G_pdw"]="G"
datall$compound[datall$compound=="H_pdw"]="H"
datall$compound[datall$compound=="I_pdw"]="I"
datall$compound[datall$compound=="J_pdw"]="J"
##selecting representative stages for each tissue
##"Ripe pulp (1)","Unripe pulp (2)", "Flowers (4)","Seeds","Mature leaves"
datall <- datall[order(datall$stage),]
dat_select<-datall[c(1:470,661:870,1131:1170),]
#ANALYSIS
a10<-aggregate(props~tissue+plant, data=dat_select, FUN=sum)
beta10<-betareg(props ~ tissue, data=a10)
summary(beta10)
d10<-emmeans(beta10,pairwise~tissue, type="response")
d10
CLD(d10$emmeans,  Letters ='ABCDEFGHIJKLMNOPQRS')
##plot
a10$tissue[a10$tissue=="Unripe pulp (2)"]="Unripe pulp"
a10$tissue[a10$tissue=="Flowers (4)"]="Flowers"
a10$tissue[a10$tissue=="Ripe pulp (1)"]="Ripe pulp"
##plot
a10$tissue[a10$tissue=="Unripe pulp (2)"]="Late unripe pulp"
a10$tissue[a10$tissue=="Flowers (4)"]="Late flowers"
a10$tissue[a10$tissue=="Ripe pulp (1)"]="Ripe pulp"
tissueplot_bwj<-ggplot(a10, aes(x=tissue, y=props)) +
geom_boxplot(outlier.shape = NA) + geom_jitter(position=position_jitter(width = 0.04), alpha=0.4)+
labs(x=" ", y="Total alkenylphenols (prop. dw)")+
theme_classic()+
scale_x_discrete(limits=c("Mature leaves","Flowers", "Unripe pulp","Ripe pulp",
"Seeds"))+
stat_summary(geom = 'text', label = c("B","A","C","A","C"),
fun.y = max, vjust = -0.8)+
scale_y_continuous(limits = c(0, 0.120))+
theme(text = element_text(size=15),
axis.text.x = element_text(angle=45, hjust=1))
tissueplot_bwj
tissueplot_bwj<-ggplot(a10, aes(x=tissue, y=props)) +
geom_boxplot(outlier.shape = NA) + geom_jitter(position=position_jitter(width = 0.04), alpha=0.4)+
labs(x=" ", y="Total alkenylphenols (prop. dw)")+
theme_classic()+
scale_x_discrete(limits=c("Mature leaves","Late flowers", "Late unripe pulp","Ripe pulp",
"Seeds"))+
stat_summary(geom = 'text', label = c("B","A","C","A","C"),
fun.y = max, vjust = -0.8)+
scale_y_continuous(limits = c(0, 0.120))+
theme(text = element_text(size=15),
axis.text.x = element_text(angle=45, hjust=1))
tissueplot_bwj
##plot
a10$tissue[a10$tissue=="Unripe pulp (2)"]="Late unripe pulp"
a10$tissue[a10$tissue=="Flowers (4)"]="Late flowers"
a10$tissue[a10$tissue=="Ripe pulp (1)"]="Ripe pulp"
tissueplot_bwj<-ggplot(a10, aes(x=tissue, y=props)) +
geom_boxplot(outlier.shape = NA) + geom_jitter(position=position_jitter(width = 0.04), alpha=0.4)+
labs(x=" ", y="Total alkenylphenols (prop. dw)")+
theme_classic()+
scale_x_discrete(limits=c("Mature leaves","Late flowers", "Late unripe pulp","Ripe pulp",
"Seeds"))+
stat_summary(geom = 'text', label = c("B","A","C","A","C"),
fun.y = max, vjust = -0.8)+
scale_y_continuous(limits = c(0, 0.120))+
theme(text = element_text(size=15),
axis.text.x = element_text(angle=45, hjust=1))
tissueplot_bwj
##plot
a10$tissue[a10$tissue=="Unripe pulp (2)"]="Late unripe pulp"
a10$tissue[a10$tissue=="Flowers (4)"]="Late flowers"
a10$tissue[a10$tissue=="Ripe pulp (1)"]="Ripe pulp"
View(a10)
##plot
a10$tissue[a10$tissue=="Unripe pulp (2)"]="Late unripe pulp"
a10$tissue[a10$tissue=="Flowers (4)"]="Late flowers"
a10$tissue[a10$tissue=="Ripe pulp (1)"]="Ripe pulp"
